buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.4+'
    }
}

apply plugin: 'android'


dependencies {
    compile files('libs/acra-4.2.3')
    compile project(":V2AndLibrary")
}

android {
    buildToolsVersion "17.0"
    compileSdkVersion 17
     sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aild.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}

// Task to run ndk-build
task ndkBuild(type: Exec) {
    commandLine 'ndk-build', '-j', Runtime.runtime.availableProcessors()
}

task copyNativeLibs(type: Copy) {
    from(new File(project(':V2Demo').getProjectDir(), 'libs/armeabi'))  { include '**/*.so' } into new File(buildDir, 'native-libs/armeabi')
    from(new File(project(':V2Demo').getProjectDir(), 'libs/x86'))  { include '**/*.so' } into new File(buildDir, 'native-libs/x86')
    from(new File(project(':V2Demo').getProjectDir(), 'libs/armeabi-v7a'))  { include '**/*.so' } into new File(buildDir, 'native-libs/armeabi-v7a')
}

// Make copyNativeLibs depend on ndkBuild since we must build the libraries
// before we can copy them.
copyNativeLibs.dependsOn 'ndkBuild'
tasks.withType(Compile) { compileTask -> compileTask.dependsOn copyNativeLibs }

clean.dependsOn 'cleanCopyNativeLibs'

tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniDir new File('build/native-libs')
}
